---
import { SOURCE_CODE_URL } from "../../scripts-ssr/constants";
import ProjectCard from "./ProjectCard.astro";
import { getEnv } from "../../scripts-ssr/env";

const repos = [
    "https://api.github.com/repos/ssalggnikool/ssalggnikool.xyz",
    "https://api.github.com/repos/ssalggnikool/Binder",
    "https://api.github.com/repos/ssalggnikool/Zcode",
    "https://api.github.com/repos/palera1n/palera1n",
    "https://api.github.com/repos/palera1n/palen1x",
    "https://api.github.com/repos/palera1n/loader",
];

const repoData = await Promise.all(
    repos.map(async repo => {
        const requestInit = {
            headers: new Headers({
                "User-Agent": SOURCE_CODE_URL,
            }),
        } satisfies RequestInit;

        if (repo.includes("api.github.com")) {
            const env = import.meta.env;

            const token = getEnv(Astro.locals, env, "GITHUB_TOKEN");

            requestInit.headers.set("Accept", "application/vnd.github.v3+json");
            requestInit.headers.set("Authorization", `Bearer ${token}`); // ${token}
        }

        return fetch(repo, requestInit)
            .then(async r => {
                if (!r.ok) {
                    const e = await r.text().catch(() => "Unknown Error");
                    throw new Error(
                        `Failed to fetch repo info for ${repo}: ${r.status} ${r.statusText}\n${e}`
                    );
                }
                return r.json();
            })
            .catch(e => {
                console.error(e);
                return null;
            });
    })
);
---
<div class="container">
    <div class="horizontal-scroll-container">
        {repoData.map(data => (data ? <ProjectCard key={data.id} {...data} /> : null))}
    </div>
</div>

<style>
    .horizontal-scroll-container {
        display: flex;
        overflow-x: auto;
        gap: 0.75em;
        padding-inline: 5px;
        padding-bottom: 20px;
    }

    .container {
        overflow-x: auto;
        position: relative; 
    }

    .container::before {
        content: '';
        position: absolute;
        top: 0;
        bottom: 0;
        left: 0;
        width: 30px;
        background: -webkit-linear-gradient(left, light-dark(rgb(255, 255, 255), rgba(0, 0, 0, 1)), rgba(0, 0, 0, 0));
        -webkit-mask-image: -webkit-linear-gradient(left, light-dark(rgb(255, 255, 255), rgba(0, 0, 0, 1)), rgba(0, 0, 0, 0));
        z-index: 10;
    }

    .container::after {
        content: '';
        position: absolute;
        top: 0;
        bottom: 0;
        right: 0;
        width: 40px;
        background: -webkit-linear-gradient(right, light-dark(rgb(255, 255, 255), rgba(0, 0, 0, 1)), rgba(0, 0, 0, 0));
        -webkit-mask-image: -webkit-linear-gradient(right, light-dark(rgb(255, 255, 255), rgba(0, 0, 0, 1)), rgba(0, 0, 0, 0));
        z-index: 10;
    }
</style>
